---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ cluster_name }}-nginxconf
  labels:
    app: {{ cluster_name }}
    deployment: {{ cluster_name }}-deployment
  namespace: default
data:
  config : |
    server {
      index index.php index.html;
      error_log  /var/log/nginx/error.log;
      access_log /var/log/nginx/access.log;
      root /var/www/app;

      location / {
          try_files $uri $uri/ /index.php?$query_string;
      }

      location ~ .php$ {
          try_files $uri =404;
          fastcgi_split_path_info ^(.+.php)(/.+)$;
          fastcgi_pass localhost:9000;
          fastcgi_index index.php;
          include fastcgi_params;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          fastcgi_param PATH_INFO $fastcgi_path_info;
      }
    }
---
# Source: {{ cluster_name }}/templates/svc-nginx.yml
apiVersion: v1
kind: Service
metadata:
  name: {{ cluster_name }}
  labels:
    app: {{ cluster_name }}
    deployment: {{ cluster_name }}-deployment
  namespace: default
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
spec:
  ports:
    - name: http
      targetPort: http
      protocol: TCP
      port: 80
  type: LoadBalancer
  selector:
    app: {{ cluster_name }}
    deployment: {{ cluster_name }}-deployment
---
# Source: {{ cluster_name }}/templates/deploy.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ cluster_name }}-app
  labels:
    app: {{ cluster_name }}
    deployment: {{ cluster_name }}-deployment
  namespace: default
spec:
  replicas: 3
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 20%
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ cluster_name }}
      deployment: {{ cluster_name }}-deployment
  template:
    metadata:
      labels:
        app: {{ cluster_name }}
        deployment: {{ cluster_name }}-deployment
    spec:
      containers:
### PHP-FPM container
      - name: {{ cluster_name }}-fpm
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh","-c","/bin/sleep 12; /bin/kill -QUIT 1"]
        env:
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: KUBE_NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.io/chefmaester/ex-test-gke:latest
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 128Mi
### Nginx container
      - name: {{ cluster_name }}-nginx
        image: nginx:latest
        imagePullPolicy: Always
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh","-c","/bin/sleep 10; /bin/kill -QUIT 1"]
        env:
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: KUBE_NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        volumeMounts:
        - name: var-cache-nginx-run
          mountPath: /var/cache/nginx
        - name: var-cache-nginx-run
          mountPath: /var/run
        - name: config
          mountPath: /etc/nginx/conf.d
        - name: appdata
          mountPath: /var/www/app
        resources:
          limits:
            cpu: 50m
            memory: 64Mi
          requests:
            cpu: 10m
            memory: 64Mi
        readinessProbe:
          failureThreshold: 8640
          httpGet:
            path: /health/check
            port: 80
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
### Startup container
      initContainers:
      - name: appdata
        image: docker.io/chefmaester/ex-test-gke:latest
        command: [sh, -c]
        args: ["cp -r /var/www/app/* /data"]
        imagePullPolicy: Always
        volumeMounts:
          - mountPath: /data
            name: appdata
      terminationGracePeriodSeconds: 30
      volumes:
        - name: var-cache-nginx-run
          emptyDir:
            medium: "Memory"
        - name: config
          configMap:
            name: {{ cluster_name }}-nginxconf
            items:
            - key: config
              path: default.conf
        - name: appdata
          emptyDir: {}
